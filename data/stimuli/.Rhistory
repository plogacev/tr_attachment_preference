#                  panel.border = element_blank())
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.75, width = z, bg = 'transparent', dpi = 1200)
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) +
theme(panel.border = element_blank())
ggsave(p1, file = "../fig/yed_satf1.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
p1
i = 1
p1 <- ggplot(data=df, aes(x, y, color = condition)) +  theme_bw() #+ geom_line()
p1 <- p1 + theme(panel.grid = element_blank())
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL)  + scale_x_continuous(limits = c(0,5), breaks = NULL)
theme(panel.border = element_blank())
p1
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL)
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) +
theme(panel.border = element_blank())
i = 1
p1 <- ggplot(data=df, aes(x, y, color = condition)) +  theme_bw() #+ geom_line()
p1 <- p1 + theme(panel.grid = element_blank())
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) +
theme(panel.border = element_blank())
p1
ggsave(p1, file = "../fig/yed_satf1.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 2
p2 <- ggplot(data=df, aes(x, y, color = condition)) + theme_bw() #+ geom_line()
p2 <- p2 + scale_x_continuous(limits = c(0,5)) + theme(panel.grid = element_blank())
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[i]), color = "lightgrey", n=501 )
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
p2 <- p2 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p2 <- p2 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p2 <- p2 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) +
theme(panel.border = element_blank())
p2
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 1
p1 <- ggplot(data=df, aes(x, y, color = condition)) +  theme_bw() #+ geom_line()
p1 <- p1 + theme(panel.grid = element_blank())
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL)
#+
#          theme(panel.border = element_blank())
p1
ggsave(p1, file = "../fig/yed_satf1.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 2
p2 <- ggplot(data=df, aes(x, y, color = condition)) + theme_bw() #+ geom_line()
p2 <- p2 + scale_x_continuous(limits = c(0,5)) + theme(panel.grid = element_blank())
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[i]), color = "lightgrey", n=501 )
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
p2 <- p2 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p2 <- p2 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p2 <- p2 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL)
#+
#      theme(panel.border = element_blank())
p2
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) +
theme(panel.border = element_line(colour = "#f8766d"))
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) +
theme(panel.border = element_rect(colour = "#f8766d"))
p1
i = 2
p2 <- ggplot(data=df, aes(x, y, color = condition)) + theme_bw() #+ geom_line()
p2 <- p2 + scale_x_continuous(limits = c(0,5)) + theme(panel.grid = element_blank())
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[i]), color = "lightgrey", n=501 )
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
p2 <- p2 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p2 <- p2 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p2 <- p2 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) +
theme(panel.border = element_rect(colour = "#00ba38"))
p2
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 1
p1 <- ggplot(data=df, aes(x, y, color = condition)) +  theme_bw() #+ geom_line()
p1 <- p1 + theme(panel.grid = element_blank())
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) +
theme(panel.border = element_rect(colour = "#f8766d"))
p1
ggsave(p1, file = "../fig/yed_satf1.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 2
p2 <- ggplot(data=df, aes(x, y, color = condition)) + theme_bw() #+ geom_line()
p2 <- p2 + scale_x_continuous(limits = c(0,5)) + theme(panel.grid = element_blank())
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[i]), color = "lightgrey", n=501 )
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
p2 <- p2 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p2 <- p2 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p2 <- p2 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) +
theme(panel.border = element_rect(colour = "#00ba38"))
p2
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 1
p1 <- ggplot(data=df, aes(x, y, color = condition)) +  theme_bw() #+ geom_line()
p1 <- p1 + theme(panel.grid = element_blank())
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL)
# +
#           theme(panel.border = element_rect(colour = "#f8766d"))
p1
ggsave(p1, file = "../fig/yed_satf1.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 2
p2 <- ggplot(data=df, aes(x, y, color = condition)) + theme_bw() #+ geom_line()
p2 <- p2 + scale_x_continuous(limits = c(0,5)) + theme(panel.grid = element_blank())
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[i]), color = "lightgrey", n=501 )
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
p2 <- p2 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p2 <- p2 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p2 <- p2 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL)
# +
#           theme(panel.border = element_rect(colour = "#00ba38"))
p2
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 1
p1 <- ggplot(data=df, aes(x, y, color = condition)) +  theme_bw() #+ geom_line()
p1 <- p1 + theme(panel.grid = element_blank())
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
# +  theme(panel.border = element_rect(colour = "#f8766d"))
p1
ggsave(p1, file = "../fig/yed_satf1.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 2
p2 <- ggplot(data=df, aes(x, y, color = condition)) + theme_bw() #+ geom_line()
p2 <- p2 + scale_x_continuous(limits = c(0,5)) + theme(panel.grid = element_blank())
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[i]), color = "lightgrey", n=501 )
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
p2 <- p2 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p2 <- p2 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p2 <- p2 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
# + theme(panel.border = element_rect(colour = "#00ba38"))
p2
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 1
p1 <- ggplot(data=df, aes(x, y, color = condition)) +  theme_bw() #+ geom_line()
p1 <- p1 + theme(panel.grid = element_blank())
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_rect(colour = "#f8766d"))
p1
ggsave(p1, file = "../fig/yed_satf1.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 2
p2 <- ggplot(data=df, aes(x, y, color = condition)) + theme_bw() #+ geom_line()
p2 <- p2 + scale_x_continuous(limits = c(0,5)) + theme(panel.grid = element_blank())
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[i]), color = "lightgrey", n=501 )
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
p2 <- p2 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p2 <- p2 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p2 <- p2 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_rect(colour = "#00ba38"))
p2
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 1
p1 <- ggplot(data=df, aes(x, y, color = condition)) +  theme_bw() #+ geom_line()
p1 <- p1 + theme(panel.grid = element_blank())
#p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_rect(colour = "#f8766d"))
p1
ggsave(p1, file = "../fig/yed_satf1.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 2
p2 <- ggplot(data=df, aes(x, y, color = condition)) + theme_bw() #+ geom_line()
p2 <- p2 + scale_x_continuous(limits = c(0,5)) + theme(panel.grid = element_blank())
#p2 <- p2 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[i]), color = "lightgrey", n=501 )
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
p2 <- p2 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p2 <- p2 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p2 <- p2 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_rect(colour = "#00ba38"))
p2
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 1
p1 <- ggplot(data=df, aes(x, y, color = condition)) +  theme_bw() #+ geom_line()
p1 <- p1 + theme(panel.grid = element_blank())
#p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
p1
ggsave(p1, file = "../fig/yed_satf1.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 2
p2 <- ggplot(data=df, aes(x, y, color = condition)) + theme_bw() #+ geom_line()
p2 <- p2 + scale_x_continuous(limits = c(0,5)) + theme(panel.grid = element_blank())
#p2 <- p2 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[i]), color = "lightgrey", n=501 )
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, color = "#7CAE00" ) # red
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF" ) # blue
p2 <- p2 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p2 <- p2 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p2 <- p2 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
#+ theme(panel.border = element_rect(colour = "#00ba38"))
p2
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 1
p1 <- ggplot(data=df, aes(x, y, color = condition)) +  theme_bw() #+ geom_line()
p1 <- p1 + theme(panel.grid = element_blank())
#p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, linetype = "dasheds" ) # red # color = "#7CAE00"
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, ) # blue # color = "#C77CFF"
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
p1
i = 1
p1 <- ggplot(data=df, aes(x, y, color = condition)) +  theme_bw() #+ geom_line()
p1 <- p1 + theme(panel.grid = element_blank())
#p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, linetype = "dashed" ) # red # color = "#7CAE00"
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, ) # blue # color = "#C77CFF"
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
p1
p1 <- ggplot() +  theme_bw() #+ geom_line() #data=df, aes(x, y, color = condition)
p1 <- p1 + theme(panel.grid = element_blank())
#p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, linetype = "dashed" ) # red # color = "#7CAE00"
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, ) # blue # color = "#C77CFF"
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
p1
i = 1
p1 <- ggplot() +  theme_bw() #+ geom_line() #data=df, aes(x, y, color = condition)
p1 <- p1 + theme(panel.grid = element_blank())
#p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, linetype = "dashed", color = "#C77CFF" ) # red # color = "#7CAE00"
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#C77CFF") # blue # color = "#C77CFF"
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
p1
i = 1
p1 <- ggplot() +  theme_bw() #+ geom_line() #data=df, aes(x, y, color = condition)
p1 <- p1 + theme(panel.grid = element_blank())
#p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, linetype = "dashed", color = "#00BFC4" ) # red # color = "#7CAE00"
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#00BFC4") # blue # color = "#C77CFF"
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
p1
i = 1
p1 <- ggplot() +  theme_bw() #+ geom_line() #data=df, aes(x, y, color = condition)
p1 <- p1 + theme(panel.grid = element_blank())
#p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, linetype = "dashed", color = "#00BFC4" ) # red # color = "#7CAE00"
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#00BFC4") # blue # color = "#C77CFF"
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
p1
ggsave(p1, file = "../fig/yed_satf1.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 2
p2 <- ggplot(data=df, aes(x, y, color = condition)) + theme_bw() #+ geom_line()
p2 <- p2 + scale_x_continuous(limits = c(0,5)) + theme(panel.grid = element_blank())
#p2 <- p2 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[i]), color = "lightgrey", n=501 )
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, linetype = "dashed", color = "#00BFC4" ) # red
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#00BFC4") # blue
p2 <- p2 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p2 <- p2 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p2 <- p2 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
#+ theme(panel.border = element_rect(colour = "#00ba38"))
p2
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 1
p1 <- ggplot() +  theme_bw() #+ geom_line() #data=df, aes(x, y, color = condition)
p1 <- p1 + theme(panel.grid = element_blank())
#p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, linetype = "dotted", color = "#00BFC4" ) # red # color = "#7CAE00"
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#00BFC4") # blue # color = "#C77CFF"
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
p1
ggsave(p1, file = "../fig/yed_satf1.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 2
p2 <- ggplot(data=df, aes(x, y, color = condition)) + theme_bw() #+ geom_line()
p2 <- p2 + scale_x_continuous(limits = c(0,5)) + theme(panel.grid = element_blank())
#p2 <- p2 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[i]), color = "lightgrey", n=501 )
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, linetype = "dotted", color = "#00BFC4" ) # red
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#00BFC4") # blue
p2 <- p2 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
# p2 <- p2 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
#                  plot.background = element_rect(fill = "transparent", colour = NA),
#                  panel.border = element_blank())
p2 <- p2 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
#+ theme(panel.border = element_rect(colour = "#00ba38"))
p2
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA))
i = 1
p1 <- ggplot() +  theme_bw() #+ geom_line() #data=df, aes(x, y, color = condition)
p1 <- p1 + theme(panel.grid = element_blank())
#p1 <- p1 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[1]), color = "lightgrey", n=501 )
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, linetype = "dotted", color = "#00BFC4" ) # red # color = "#7CAE00"
p1 <- p1 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#00BFC4") # blue # color = "#C77CFF"
# p1 <- p1 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
p1 <- p1 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA))
# ,
#                  panel.border = element_blank())
p1 <- p1 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
p1
ggsave(p1, file = "../fig/yed_satf1.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
i = 2
p2 <- ggplot(data=df, aes(x, y, color = condition)) + theme_bw() #+ geom_line()
p2 <- p2 + scale_x_continuous(limits = c(0,5)) + theme(panel.grid = element_blank())
#p2 <- p2 + stat_function(fun = satf(lambda=lambda[i], alpha=alpha[i], delta=delta[i]), color = "lightgrey", n=501 )
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]-delta_lambda[i]*0.5, alpha=alpha[i]-delta_alpha[i]*0.5, delta=delta[i]-delta_delta[i]*0.5), n=501, linetype = "dotted", color = "#00BFC4" ) # red
p2 <- p2 + stat_function(fun = satf(lambda=lambda[i]+delta_lambda[i]*0.5, alpha=alpha[i]+delta_alpha[i]*0.5, delta=delta[i]+delta_delta[i]*0.5), n=501, color = "#00BFC4") # blue
p2 <- p2 + scale_color_manual(breaks = c("a","b"), values = c("#7CAE00","#C77CFF")) + theme(legend.position = "top")
p2 <- p2 + theme(panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA))
#,
#                  panel.border = element_blank())
p2 <- p2 + ylab(NULL) + xlab(NULL) + scale_x_continuous(limits = c(0,5), breaks = NULL) + scale_y_continuous(breaks = NULL) + theme(panel.border = element_blank())
#+ theme(panel.border = element_rect(colour = "#00ba38"))
p2
ggsave(p2, file = "../fig/yed_satf2.svg", height = z*0.5, width = z, bg = 'transparent', dpi = 1200)
setwd("~/Academia/Theses/Elifnur/stimuli")
library(tidyverse)
library(magrittr)
raw_items <- readxl::read_excel("./RC Adjective Experiment.xlsx")
View(raw_items)
# experimental conditions:
# a. no adjectives - N1 attachment
# b. no adjectives - N2 attachment
# c. no adjectives - ambiguous attachment
# d. adjectives - N1 attachment
# e. adjectives - N2 attachment
# f. adjectives - ambiguous attachment
raw_items %<>% mutate(a = paste(Adjunct, RC, `Verb of report`, N1_att_N1, N1_att_N2, Remainder))
raw_items %<>% mutate(b = paste(Adjunct, RC, `Verb of report`, N2_att_N1, N2_att_N2, Remainder))
raw_items %<>% mutate(c = paste(Adjunct, RC, `Verb of report`, amb_att_N1, amb_att_N2, Remainder))
raw_items %<>% mutate(d = paste(Adjunct, RC, `Verb of report`, N1_att_N1, N1_att_adjective, N1_att_N2, Remainder))
raw_items %<>% mutate(e = paste(Adjunct, RC, `Verb of report`, N2_att_N1, N2_att_adjective, N2_att_N2, Remainder))
raw_items %<>% mutate(f = paste(Adjunct, RC, `Verb of report`, amb_att_N1, amb_att_adjective, amb_att_N2, Remainder))
items <- raw_items %>% dplyr::select(item, a:f, Question, Answer1:Answer4)
items %<>% tidyr::pivot_longer(a:f, names_to = "condition", values_to = "sentence" )
items$attachment <- items$condition %>% dplyr::recode("c"="ambiguous", "f"="ambiguous",  "a"="N1","d"="N1",  "b"="N2","e"="N2")
items %<>% tidyr::pivot_longer(Answer1:Answer4, names_to = "answer_type", values_to = "answer" )
View(items)
answers_mapping
# mapping from answers (rows) to attachment conditions (columns)
#     a,d   b,e   c,f
#     N1    N2    amb
#    ----------------
# 1   -     N1    -
# 2   -     N2    N2
# 3   N1    -     N1
# 4   N2    -     -
answers_mapping <- data.frame(attachment = rep(c("N1","N2","ambiguous"), each=4),
answer_type = c("Answer1","Answer2","Answer3","Answer4", "Answer1","Answer2","Answer3","Answer4", "Answer1","Answer2","Answer3","Answer4"),
answer_np   = c(NA,       NA,       "N1",     "N2",      "N1",     "N2",      NA,       NA,        NA,      "N2",     "N1",     NA)
)
answers_mapping
x <- data.frame(x = c("a","a","b","b"))
y <- data.frame(x = c("a","b"), y = 1:2)
x
y
y <- data.frame(x = c("a","b","c"), y = 1:3)
y
x %>% left_join(y)
items %<>% left_join( answers_mapping )
items %<>% subset(!is.na(answer_np))
items %<>% dplyr::select(-answer_type)
items$answer_np %>% paste0("answer_", .)
items$answer_np %<>% paste0("answer_", .)
items %>% tidyr::pivot_wider(names_from = answer_np, values = answer)
items %>% tidyr::pivot_wider(names_from = answer_np, values = answer)
items %>% tidyr::pivot_wider(names_from = "answer_np", values_from = "answer")
items %<>% tidyr::pivot_wider(names_from = "answer_np", values_from = "answer")
printf("- %s - %d -", "a", 1 )
sprintf("- %s - %d -", "a", 1 )
sprintf("- %s - %000d -", "a", 1 )
sprintf("- %s - %000.d -", "a", 1 )
sprintf("- %s - %000.f -", "a", 1 )
sprintf("- %s - %0002f -", "a", 1 )
sentence_template <-
'[["oranges_%s", %d], "DashedSentence", {s: "%s"}, "Question", {q: "%s", as: ["%s", "%s"], hasCorrect: 0}],\n'
with(items[1:3,], sprintf(sentence_template, condition, item, sentence, Question, answer_N1, answer_N2))
x <- with(items[1:3,], sprintf(sentence_template, condition, item, sentence, Question, answer_N1, answer_N2))
"'"
'"'
cat('"')
cat(x)
ibex_sentences <- with(items[1:3,], sprintf(sentence_template, condition, item, sentence, Question, answer_N1, answer_N2))
ibex_sentences <- with(items, sprintf(sentence_template, condition, item, sentence, Question, answer_N1, answer_N2))
ibex_sentences
write_file(ibex_sentences, file = "./ibex_stimuli/ibex_sentences")
ibex_sentences_string <- ibex_sentences %>% paste(sep = "\n")
write_file(ibex_sentences_string, file = "./ibex_stimuli/ibex_sentences")
write_file
?write_file
write_lines(ibex_sentences, file = "./ibex_stimuli/ibex_sentences")
ibex_sentences_string <- ibex_sentences %>% paste(sep = "")
sentence_template <-
'[["oranges_%s", %d], "DashedSentence", {s: "%s"}, "Question", {q: "%s", as: ["%s", "%s"], hasCorrect: 0}],'
ibex_sentences <- with(items, sprintf(sentence_template, condition, item, sentence, Question, answer_N1, answer_N2))
write_lines(ibex_sentences, file = "./ibex_stimuli/ibex_sentences")
system("cat ./ibex_stimuli/ibex_header ./ibex_stimuli/ibex_sentences ./ibex_stimuli/ibex_footer > ./ibex_stimuli.js")
max(items$item)
